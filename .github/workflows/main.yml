name: Main

on:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
        pnpm-version: [7.19]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: ${{ matrix.node-version }}
      - name: Cache pnpm
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: pnpm-
      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
            packages/**/node_modules
          key: modules-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm i

  lint:
    name: Lint
    needs: install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
        pnpm-version: [7.19]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/**/node_modules
          key: modules-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Check types
        run: pnpm typecheck
      - name: Lint & format code
        run: pnpm lint:fix && pnpm lint:format packages
      - name: Commit
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          git add .
          if [ -z "$(git status --porcelain)" ]; then
            echo "no formatting changed"
            exit 0
          fi
          git commit -m "chore: format"
          git push
          echo "pushed formatting changes https://github.com/$GITHUB_REPOSITORY/commit/$(git rev-parse HEAD)"

  build:
    name: Build
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
        pnpm-version: [7.19]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/**/node_modules
          key: modules-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Build
        run: pnpm build

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
        pnpm-version: [7.19]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/**/node_modules
          key: modules-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Run tests
        run: pnpm test
        env:
          VITE_WC_PROJECT_ID: ${{ secrets.VITE_WC_PROJECT_ID }}
